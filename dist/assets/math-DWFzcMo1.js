function e(n,o){if(n<0)throw new Error(`${o} must be non-negative`)}function f(n,o,t){if(n<o)throw new Error(`${t} must be greater than ${o}`)}function a(n,o,t){if(n<0||n>=o*o)throw new Error(`${t}: index must be in the range [0, ${o*o}]`)}function s(n,o,t){const{row:r,col:c}=n;if(r<0||r>=o||c<0||c>=o)throw new Error(`${t}: indices must be in the range [0, ${o}], got (${r}, ${c})`)}function l(n,o){e(n,"index"),a(n,o,"indices"),f(o,1,"grid_width");const t=Math.floor(n/o),r=n%o;return{row:t,col:r}}function w(n,o){e(o,"grid_width"),s(n,o,"indices");const{row:t,col:r}=n;return t*o+r}function i(n,o){return e(o,"grid_size"),s(n,o,"indices"),n}function $(n,o){e(o,"grid_size"),s(n,o,"indices");const{row:t,col:r}=n;return{row:t,col:o-1-r}}function b(n,o){e(o,"grid_size"),s(n,o,"indices");const{row:t,col:r}=n;return{row:o-1-t,col:r}}function h(n,o){e(o,"grid_size"),s(n,o,"indices");const{row:t,col:r}=n;return{row:o-1-t,col:o-1-r}}function p(n,o){e(o,"grid_size"),s(n,o,"indices");const{row:t,col:r}=n,c=o-1-t,u=Math.floor(o/2);return{col:r-u,row:c-u}}function m(n,o){e(o,"grid_size");const{row:t,col:r}=n,c=Math.floor(o/2),u=t+c;return{row:o-1-u,col:r+c}}function E(n,o){return(n%o+o)%o}export{b as a,h as b,l as c,w as d,m as e,$ as f,i,E as m,p as t};
