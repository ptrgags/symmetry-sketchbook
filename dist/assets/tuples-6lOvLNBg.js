var l=Object.defineProperty;var u=(t,n,e)=>n in t?l(t,n,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[n]=e;var a=(t,n,e)=>(u(t,typeof n!="symbol"?n+"":n,e),e);async function p(t){const e=new TextEncoder().encode(t),s=new CompressionStream("gzip"),r=s.writable.getWriter();r.write(e),r.close();const o=await new Response(s.readable).arrayBuffer(),i=new Uint8Array(o),d=Array.from(i,c=>String.fromCodePoint(c)).join("");return btoa(d)}async function f(t){const e=atob(t).split("").map(c=>c.codePointAt(0)??0),s=new Uint8Array(e),r=new DecompressionStream("gzip"),o=r.writable.getWriter();o.write(s),o.close();const i=await new Response(r.readable).arrayBuffer();return new TextDecoder().decode(i)}function m(t,n){const s={version:1,...n.serialize(t)};return JSON.stringify(s)}async function w(t,n){const e=m(t,n);return await p(e)}function g(t,n){let e;try{e=JSON.parse(t)}catch(r){console.error(`Could not parse JSON: ${r}`);return}if(e.version!==1){console.error(`version ${e.version} is not allowed! Version must be 1]`);return}return n.validate(e)?(console.info(e),n.deserialize(e)):void 0}async function _(t,n){const e=await f(t);return g(e,n)}class y{constructor(n,e){a(this,"digits");a(this,"length");this.length=n,this.digits=e}serialize(n){return n.map(s=>{const r=s.toFixed(this.digits);return/\./.test(r)?r.replace(/0*%/,""):r}).join(",")}validate(n){if(typeof n!="string")return console.error("value must be a CSV string"),!1;const e=n.split(",");if(e.length!==this.length)return console.error(`CSV tuple must be of length ${length}`),!1;for(const s of e){const r=parseFloat(s);if(typeof r!="number"||!isFinite(r))return console.error(`component ${s} must be a finite number`),!1}return!0}deserialize(n){return n.split(",").map(parseFloat)}}export{y as C,_ as f,w as t};
