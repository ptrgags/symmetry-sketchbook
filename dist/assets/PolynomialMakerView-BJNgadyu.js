var xt=Object.defineProperty;var kt=(e,o,r)=>o in e?xt(e,o,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[o]=r;var K=(e,o,r)=>(kt(e,typeof o!="symbol"?o+"":o,r),r);import{C as q,T as Mt,a as ut,_ as J}from"./Sketch-D1HhKuvk.js";import{t as ht,a as W,R as Rt,d as Vt,_ as zt}from"./ReferenceGeometryEditor.vue_vue_type_script_setup_true_lang-B8tEOrp8.js";import{T as Ct,C as Tt,_ as Et,a as Q}from"./CoefficientPickerSketch-D-YmLfGW.js";import{F as ct}from"./common_glsl-CLkdFb3a.js";import{m as st,i as It,f as $t,a as Pt,b as Nt,t as X,c as St,d as Ot}from"./math-DWFzcMo1.js";import{c as Ut,b as Ft,d as At,P as qt,a as Lt}from"./SerializedPolynomialPalette-8qKsev0W.js";import{d as H,p as L,q as T,r as U,w as D,f as v,c as w,e as t,t as Z,g as z,h as V,i as A,z as vt,A as F,_ as Dt,j as ot,l as rt,F as j,m as nt,n as tt,a as b,b as M,k as Zt}from"./index-xFizMusB.js";import{t as dt}from"./tuples-6lOvLNBg.js";import"./PolynomialShader-rZ4bNzel.js";import"./validation-Cv0neZFQ.js";function jt(e){const{diff:o,sum:r}=e,n=(o+r)/2,i=(r-o)/2;return{n,m:i}}function Bt(e,o){const r=st(e,2);return r==0?2*o:r==1&&o==0?0:2*Math.sign(o)*Math.max(Math.abs(o)-.5,0)}const Gt={identity:It,flip_col:$t,flip_row:Pt,flip_both:Nt};function Yt(e,o,r){return Gt[e](o,r)}const Kt={rotation_folds:1,input_rotation:!1,input_reflection:!1,input_inversion:!1,output_rotations:0,output_reflection:!1};function B(e){const o=e.input_reflection!==e.output_reflection,r=e.input_inversion;return r&&o?"flip_row":r?"flip_both":o?"flip_col":"identity"}function Qt(e){return Number(e.input_inversion)+Number(e.input_reflection)}function gt(e,o){const r=Math.pow(-1,Qt(e)),n=Number(e.input_rotation),i=Math.pow(-1,Number(e.output_reflection)),a=e.output_rotations;return r*n*o-i*a}function it(e,o){const r=e.input_rotation,n=e.input_reflection||e.input_inversion||e.output_reflection;if(!r||n)return o;const i=e.rotation_folds,a=e.output_rotations;return i*o+a}function _t(e,o){const{row:r,col:n}=e,i=it(o,n),a=Bt(i,r);return{diff:i,sum:a}}function Xt(e,o,r){if(B(e)!=="identity")throw new Error("rule is not a self-partner constraint!");const n=e.rotation_folds,i=gt(e,o);if(e.output_reflection){const u=q.root_of_unity(n,i),s=r.to_rect(),_=u.to_rect(),g=s.dot(_);return u.scale(g)}const a=st(i,n);return(e.input_rotation||e.output_rotations>0)&&a!==0?(console.warn("Term invalid for rotation constraint. Setting to 0"),q.ZERO):r}function Ht(e,o,r){if(B(e)==="identity")throw new Error("Trying to compute partner coefficient for a self-partner rule");const n=e.output_reflection?r.conj:r,i=gt(e,o),a=q.root_of_unity(e.rotation_folds,i);return n.mult(a)}function Jt(e){if(e.length===0)throw new Error("There must be at least one rule");const o=new Set;for(const r of e){const n=B(r);if(o.has(n))throw new Error(`Can't have multiple rules with the same pairing: ${n}`)}}class mt{constructor(o,r){K(this,"grid_size");K(this,"self_rule");K(this,"partner_rules",[]);this.grid_size=o,Jt(r);for(const n of r)B(n)==="identity"?this.self_rule=n:this.partner_rules.push(n)}get first_rule(){return this.self_rule??this.partner_rules[0]}is_editable(o){const r=X(o,this.grid_size),{diff:n,sum:i}=_t(r,this.first_rule);return!(st(n,2)===1&&i==0)}frequency_map(o){const r=X(o,this.grid_size),n=_t(r,this.first_rule);return jt(n)}update_coefficients(o,r,n){const i=St(r,this.grid_size),a=X(i,this.grid_size);let u=n;if(this.self_rule){const _=it(this.self_rule,a.col);u=Xt(this.self_rule,_,n)}const s=[[i,u]];for(const _ of this.partner_rules){const g=B(_),p=s.map(([C,R])=>{const k=Yt(g,C,this.grid_size),c=X(k,this.grid_size),y=it(_,c.col),h=Ht(_,y,R);return[k,h]});s.push(...p)}for(const[_,g]of s){const p=Ot(_,this.grid_size);o[p]=g}}}var f=(e=>(e[e.Identity=0]="Identity",e[e.Rotation=1]="Rotation",e[e.Mirror=2]="Mirror",e[e.ComplexInversion=3]="ComplexInversion",e[e.CircleInversion=4]="CircleInversion",e[e.RotoInversion=5]="RotoInversion",e))(f||{});function Wt(e){switch(e){case 0:return"Identity";case 1:return"Rotation";case 2:return"Mirror";case 3:return"Complex-inversion";case 4:return"Circle Inversion";case 5:return"Roto-inversion";default:return""}}function te(e){switch(e){case 1:case 5:return!0}return!1}function ee(e){switch(e){case 2:case 4:case 5:return!0}return!1}function oe(e){switch(e){case 3:case 4:case 5:return!0}return!1}const re={class:"constraint"},ne={class:"form-row"},ie={class:"form-row"},se=["max"],le={key:0,class:"form-row"},ae=H({__name:"ColorTurnEditor",props:L({constraint:{},rotationFolds:{default:0},modelValue:{}},{rotations:{default:0},rotationsModifiers:{}}),emits:L(["update:modelValue"],["update:rotations"]),setup(e,{emit:o}){const r=e,n=o,i=T(e,"rotations"),a=U(!1),u=ht(a);return D([i,a],(s,_)=>{const[g,p]=s,[C,R]=_;g===C&&p===R||n("update:modelValue",{output_rotations:g,output_reflection:p})}),(s,_)=>(v(),w("div",re,[t("div",ne,"Input symmetry: "+Z(z(Wt)(s.constraint.input_symmetry)),1),t("div",ie,[t("label",null,[V(" Output Turns: "),A(t("input",{id:"third-output-rotation",type:"number",min:"0",max:r.rotationFolds-1,step:"1","onUpdate:modelValue":_[0]||(_[0]=g=>i.value=g)},null,8,se),[[vt,i.value,void 0,{number:!0}]])])]),s.constraint.output_reflection_editable?(v(),w("div",le,[t("label",null,[V("Output Reflection?: "),t("input",{id:"third-output-reflection",type:"checkbox",onChange:_[1]||(_[1]=(...g)=>z(u)&&z(u)(...g))},null,32)])])):F("",!0)]))}}),et=Dt(ae,[["__scopeId","data-v-6f1218cf"]]),ft=[{id:"identity",label:{rosette:"No Symmetry",frieze:"No Symmetry"},first_constraint:{input_symmetry:f.Identity,output_reflection_editable:!0}},{id:"mirror_x",label:{rosette:"Mirror",frieze:"Mirrors (horizontal)"},first_constraint:{input_symmetry:f.Mirror,output_reflection_editable:!0}},{id:"inversion",label:{rosette:"Circle inversion",frieze:"Mirror (vertical)"},first_constraint:{input_symmetry:f.CircleInversion,output_reflection_editable:!0}},{id:"reciprocal",label:{rosette:"Complex inversion",frieze:"Rotations"},first_constraint:{input_symmetry:f.ComplexInversion,output_reflection_editable:!0}},{id:"mirror_inversion",label:{rosette:"Mirror + Complex inversion",frieze:"Mirror (horizontal) + rotations"},first_constraint:{input_symmetry:f.Mirror,output_reflection_editable:!0},second_constraint:{input_symmetry:f.ComplexInversion,output_reflection_editable:!0}}],pt=[{id:"p1",label:{rosette:"Rotation",frieze:"Translations"},first_constraint:{input_symmetry:f.Rotation,output_reflection_editable:!0}},{id:"p11g",label:{rosette:"Roto-inversion",frieze:"Glide Reflections"},first_constraint:{input_symmetry:f.RotoInversion,output_reflection_editable:!0}},{id:"p1m1",label:{rosette:"Rotation + Mirror",frieze:"Translations + Mirrors (horizontal)"},first_constraint:{input_symmetry:f.Rotation,output_reflection_editable:!0},second_constraint:{input_symmetry:f.Mirror,output_reflection_editable:!1}},{id:"p11m",label:{rosette:"Rotation + Circle inversion",frieze:"Translations + Mirror (vertical)"},first_constraint:{input_symmetry:f.Rotation,output_reflection_editable:!0},second_constraint:{input_symmetry:f.CircleInversion,output_reflection_editable:!0}},{id:"p2",label:{rosette:"Rotation + Complex inversion",frieze:"Translations + Rotations"},first_constraint:{input_symmetry:f.Rotation,output_reflection_editable:!0},second_constraint:{input_symmetry:f.ComplexInversion,output_reflection_editable:!0}},{id:"p2mg",label:{rosette:"Roto-inversion + Mirror",frieze:"Glide Reflections + Mirrors (horizontal)"},first_constraint:{input_symmetry:f.RotoInversion,output_reflection_editable:!0},second_constraint:{input_symmetry:f.Mirror,output_reflection_editable:!0}},{id:"p2mm",label:{rosette:"Rotation + Complex Inversion + Mirror",frieze:"Translations + Mirrors"},first_constraint:{input_symmetry:f.Rotation,output_reflection_editable:!0},second_constraint:{input_symmetry:f.ComplexInversion,output_reflection_editable:!0},third_constraint:{input_symmetry:f.Mirror,output_reflection_editable:!1}}],ue={class:"form-row"},ce=t("label",{for:"rotation-folds"},"Rotation folds (1 = no rotation) ",-1),de={class:"form-row"},_e=t("label",{for:"symmetry-group"},"Symmetry Type: ",-1),me=["value"],fe=["value"],pe={key:0,class:"form-row"},ye=t("label",{for:"color-turning-enabled"},"Color Turning Symmetry? ",-1),he=H({__name:"PolynomialSymmetryEditor",props:L({symmetryMode:{},value:{}},{rotation_folds:{default:1},rotation_foldsModifiers:{},no_rotation_group:{default:ft[0]},no_rotation_groupModifiers:{},rotation_group:{default:pt[0]},rotation_groupModifiers:{},first_color_turn:{},first_color_turnModifiers:{},second_color_turn:{},second_color_turnModifiers:{},third_color_turn:{},third_color_turnModifiers:{}}),emits:L(["update:modelValue"],["update:rotation_folds","update:no_rotation_group","update:rotation_group","update:first_color_turn","update:second_color_turn","update:third_color_turn"]),setup(e,{emit:o}){const r=T(e,"rotation_folds"),n=T(e,"no_rotation_group"),i=T(e,"rotation_group"),a=ot(()=>r.value===1?n.value:i.value),u=U(!1),s=ht(u),_=T(e,"first_color_turn"),g=T(e,"second_color_turn"),p=T(e,"third_color_turn"),C=o;function R(k,c,y,h){const l=c.input_symmetry,E=te(l),I=ee(l),$=oe(l);return{rotation_folds:k,input_rotation:E,input_reflection:I,input_inversion:$,output_rotations:y,output_reflection:h}}return D([r,a,u,_,g,p],k=>{const[c,y,h,l,E,I]=k;if(!y)return;const $={output_rotations:0,output_reflection:!1},G=y.first_constraint,N=h&&l?l:$,d=[R(c,G,N.output_rotations,N.output_reflection)];if(y.second_constraint){const m=y.second_constraint,x=h&&E?E:$,P=m.output_reflection_editable?x.output_reflection:N.output_reflection,S=R(c,m,x.output_rotations,P);d.push(S)}if(y.third_constraint){const m=y.third_constraint,x=h&&I?I:$,P=m.output_reflection_editable?x.output_reflection:N.output_reflection,S=R(c,m,x.output_rotations,P);d.push(S)}C("update:modelValue",d)}),(k,c)=>{var y,h;return v(),w("div",null,[t("div",ue,[ce,A(t("input",{id:"rotation-folds",type:"number",min:"1",max:"12",step:"1","onUpdate:modelValue":c[0]||(c[0]=l=>r.value=l)},null,512),[[vt,r.value,void 0,{number:!0}]])]),t("div",de,[_e,r.value===1?A((v(),w("select",{key:0,id:"symmetry-group","onUpdate:modelValue":c[1]||(c[1]=l=>n.value=l)},[(v(!0),w(j,null,nt(z(ft),l=>(v(),w("option",{key:l.id,value:l},Z(l.label[k.$props.symmetryMode]),9,me))),128))],512)),[[rt,n.value]]):A((v(),w("select",{key:1,id:"symmetry-group","onUpdate:modelValue":c[2]||(c[2]=l=>i.value=l)},[(v(!0),w(j,null,nt(z(pt),l=>(v(),w("option",{key:l.id,value:l},Z(l.label[k.$props.symmetryMode]),9,fe))),128))],512)),[[rt,i.value]])]),a.value?(v(),w("div",pe,[ye,t("input",{id:"color-turning-enabled",type:"checkbox",onChange:c[3]||(c[3]=(...l)=>z(s)&&z(s)(...l))},null,32)])):F("",!0),u.value&&a.value?(v(),tt(et,{key:1,constraint:a.value.first_constraint,"rotation-folds":r.value,modelValue:_.value,"onUpdate:modelValue":c[4]||(c[4]=l=>_.value=l)},null,8,["constraint","rotation-folds","modelValue"])):F("",!0),u.value&&((y=a.value)!=null&&y.second_constraint)?(v(),tt(et,{key:2,constraint:a.value.second_constraint,"rotation-folds":r.value,modelValue:g.value,"onUpdate:modelValue":c[5]||(c[5]=l=>g.value=l)},null,8,["constraint","rotation-folds","modelValue"])):F("",!0),u.value&&((h=a.value)!=null&&h.third_constraint)?(v(),tt(et,{key:3,constraint:a.value.third_constraint,"rotation-folds":r.value,modelValue:p.value,"onUpdate:modelValue":c[6]||(c[6]=l=>p.value=l)},null,8,["constraint","rotation-folds","modelValue"])):F("",!0)])}}}),ve={class:"form-row"},ge=t("label",{for:"palette-type"},"Palette Type: ",-1),be=["value"],we={class:"form-row"},xe={class:"form-row"},ke={class:"form-row"},Me={class:"form-row"},Re=H({__name:"PolynomialPaletteEditor",props:{modelValue:{}},emits:["update:modelValue"],setup(e,{emit:o}){const n=U(e.modelValue),i=o;return D(n,a=>i("update:modelValue",a),{deep:!0}),(a,u)=>(v(),w(j,null,[t("div",ve,[ge,A(t("select",{id:"palette-type","onUpdate:modelValue":u[0]||(u[0]=s=>n.value.palette_type=s)},[(v(!0),w(j,null,nt(z(Ut),s=>(v(),w("option",{key:s.id,value:s},Z(s.label),9,be))),128))],512),[[rt,n.value.palette_type]])]),t("div",we,[b(W,{id:"primary-color",modelValue:n.value.primary_color,"onUpdate:modelValue":u[1]||(u[1]=s=>n.value.primary_color=s)},{default:M(()=>[V("Primary Color")]),_:1},8,["modelValue"])]),t("div",xe,[b(W,{id:"secondary-color",modelValue:n.value.secondary_color,"onUpdate:modelValue":u[2]||(u[2]=s=>n.value.secondary_color=s)},{default:M(()=>[V("Secondary Color")]),_:1},8,["modelValue"])]),t("div",ke,[b(W,{id:"far-color",modelValue:n.value.far_color,"onUpdate:modelValue":u[3]||(u[3]=s=>n.value.far_color=s)},{default:M(()=>[V("Far Away Color")]),_:1},8,["modelValue"])]),t("div",Me,[b(Rt,{id:"far-power",min:1,max:19,modelValue:n.value.far_power,"onUpdate:modelValue":u[4]||(u[4]=s=>n.value.far_power=s)},{default:M(()=>[V("Far Away Fade")]),_:1},8,["modelValue"])])],64))}}),Ve=t("details",{class:"form-row"},[t("summary",null,"Math Details"),t("p",null,[V(" As described in the first half of "),t("cite",null,"Creating Symmetry"),V(" by Frank Farris, rosettes and friezes can be made using complex polynomials of the form: ")]),t("math",{display:"block",class:"tml-display",style:{display:"block math"}},[t("mtable",{displaystyle:"true",columnalign:"right left"},[t("mtr",null,[t("mtd",{class:"tml-right",style:{padding:"0.7ex 0em 0.7ex 0em"}},[t("mrow",null,[t("msub",null,[t("mi",null,"f"),t("mrow",null,[t("mi",null,"r"),t("mi",null,"o"),t("mi",null,"s"),t("mi",null,"e"),t("mi",null,"t"),t("mi",null,"t"),t("mi",null,"e")])]),t("mo",{form:"prefix",stretchy:"false"},"("),t("mi",null,"z"),t("mo",{form:"postfix",stretchy:"false"},")")])]),t("mtd",{class:"tml-left",style:{padding:"0.7ex 0em 0.7ex 0em"}},[t("mrow",null,[t("mo",null,"="),t("mrow",null,[t("munder",null,[t("mo",{movablelimits:"false"},"∑"),t("mrow",null,[t("mi",null,"n"),t("mo",{separator:"true"},","),t("mi",null,"m")])])]),t("msub",null,[t("mi",null,"a"),t("mrow",null,[t("mi",null,"n"),t("mo",{separator:"true"},","),t("mi",null,"m")])]),t("msup",null,[t("mi",null,"z"),t("mi",null,"n")]),t("msup",null,[t("mover",null,[t("mi",null,"z"),t("mo",{stretchy:"false",class:"tml-xshift",style:{"math-style":"normal","math-depth":"0"}},"‾")]),t("mi",null,"m")])])])]),t("mtr",null,[t("mtd",{class:"tml-right",style:{padding:"0.7ex 0em 0.7ex 0em"}},[t("mrow",null,[t("msub",null,[t("mi",null,"f"),t("mrow",null,[t("mi",null,"f"),t("mi",null,"r"),t("mi",null,"i"),t("mi",null,"e"),t("mi",null,"z"),t("mi",null,"e")])]),t("mo",{form:"prefix",stretchy:"false"},"("),t("mi",null,"z"),t("mo",{form:"postfix",stretchy:"false"},")")])]),t("mtd",{class:"tml-left",style:{padding:"0.7ex 0em 0.7ex 0em"}},[t("mrow",null,[t("mo",null,"="),t("msub",null,[t("mi",null,"f"),t("mrow",null,[t("mi",null,"r"),t("mi",null,"o"),t("mi",null,"s"),t("mi",null,"e"),t("mi",null,"t"),t("mi",null,"t"),t("mi",null,"e")])]),t("mo",{form:"prefix",stretchy:"false"},"("),t("msup",null,[t("mi",null,"e"),t("mrow",null,[t("mi",null,"i"),t("mi",null,"z")])]),t("mo",{form:"postfix",stretchy:"false"},")")])])])])]),t("p",null," By careful choice of the coefficients, symmetries of these equations turn into symmetries of the complex function. "),t("p",null," This form does quite a bit of math behind the scenes to take the symmetry description, and produce constraints for the grid of terms to help enforce the symmetry. The basics are described in chapters 7-8 of the book, but I had to derive the generalization of the patterns myself. ")],-1),ze=t("details",{class:"form-row"},[t("summary",null,"Known Issues"),t("p",null," This page is the most experimental one of the entire website. It mostly works, but checking the rest is rather tedious. I may return to it someday, but I don't want to hold up showing off the rest of this project that is working. "),t("ul",null,[t("li",null," Roto-inversions/glide reflections seem to be buggy, I haven't gotten around to debugging it. "),t("li",null," The symmetry options aren't restrictive enough and allow some invalid symmetry rules. For example, for roto-inversions the number of rotations must be even, else the pattern won't line up with itself after a full circle. "),t("li",null," For the color turning/reversing symmetry options, I realized too late that the recipes are a lot more restrictive than I thought. Since mirrors/inversions are involutions (repeating it twice cancels it out), the only valid color turn for those cases is a half turn. ")]),t("p",null," If I ever update this in the future, the main thing would be to redo this form. If I figure out an exhaustive list of cases, then a dropdown like in the wallpaper maker page would make this a lot simpler for everyone. ")],-1),Ce=t("p",null," Select a term from the grid. Then click and drag in the complex plane below to edit the term. ",-1),Te={class:"form-row"},Ee={class:"form-row"},Ie={class:"form-row"},$e=t("label",{for:"toggle-palette"}," Show color palette",-1),Pe={class:"form-row"},Ne=t("summary",null,"Reference Geometry",-1),Se={key:0,class:"form-row"},Oe={key:1},yt=3,Ke=H({__name:"PolynomialMakerView",props:L({symmetryMode:{}},{palette:{default:At},paletteModifiers:{},ref_geom:{default:Vt},ref_geomModifiers:{}}),emits:["update:palette","update:ref_geom"],setup(e){const o=2*yt+1,r=o*o,n=yt,i=(n-1)*o+n,a=new qt,u=new Lt,s=e,_=ot(()=>s.symmetryMode==="frieze"?"Frieze Maker":"Rosette Maker"),g=ot(()=>s.symmetryMode==="frieze"?"/frieze_symmetry":"/point_symmetry"),p=U(new mt(o,[Kt])),C=T(e,"palette"),R=T(e,"ref_geom"),k=U(),c=U(),y=new Ft({symmetry_mode:s.symmetryMode,pattern:{series:ct.from_tuples([[1,0,1,0]]),rotation_order:4},palette:C.value,ref_geom:R.value}),h={cell_size:40,rows:o,cols:o,selected_index:i,coefficients:new Array(r).fill(q.ZERO),frequency_map:d=>p.value.frequency_map(d),editable_map:d=>p.value.is_editable(d)},l=new Ct(h),E={coefficient:ut.ZERO},I=new Tt(E);l.events.addEventListener("term-selected",d=>{const m=d.detail;E.coefficient=m.to_rect()});function $(){const d=h.coefficients,m=[];for(let O=0;O<o;O++)for(let Y=0;Y<o;Y++){const bt=O*o+Y,at=d[bt];if(at.r===0)continue;const wt=p.value.frequency_map({row:O,col:Y});m.push({frequencies:wt,coefficient:at})}const x=p.value.first_rule.rotation_folds??1,S={rotation_order:x>=2?x:4,series:new ct(m)};y.pattern=S,dt(S,a).then(O=>{k.value=O}).catch(console.error)}function G(d){const m=d.detail;p.value.update_coefficients(h.coefficients,h.selected_index,m.to_polar()),$()}I.events.addEventListener("change",G),I.events.addEventListener("input",G);function N(d){const m=d.target;y.show_palette=m.checked}function lt(d){p.value=new mt(o,d),h.coefficients.fill(q.ZERO),h.selected_index=i,h.frequency_map=x=>p.value.frequency_map(x),h.editable_map=x=>p.value.is_editable(x),E.coefficient=ut.ZERO,$()}return D(C,d=>{y.palette=d,dt(d,u).then(m=>{c.value=m}).catch(console.error)},{deep:!0}),D(R,d=>{y.ref_geom=d},{deep:!0}),(d,m)=>{const x=Zt("RouterLink");return v(),w(j,null,[t("h2",null,Z(_.value),1),b(Mt,null,{left:M(()=>[b(J,{sketch:z(y),is_card:!0},null,8,["sketch"])]),right:M(()=>[b(Et,null,{default:M(()=>[b(Q,{title:"Symmetry"},{default:M(()=>[b(he,{"symmetry-mode":s.symmetryMode,"onUpdate:modelValue":lt},null,8,["symmetry-mode"]),Ve,ze]),_:1}),b(Q,{title:"Pattern"},{default:M(()=>[Ce,t("div",Te,[b(J,{sketch:z(l),is_card:!1},null,8,["sketch"])]),t("div",Ee,[b(J,{sketch:z(I),is_card:!1},null,8,["sketch"])])]),_:1}),b(Q,{title:"Palette"},{default:M(()=>[t("p",null,[V(' Select a palette type and edit the colors to customize your design. The "Show color palette" button shows what the color palette looks like for reference. See the '),b(x,{to:"/point_symmetry/tie_dye_analogy"},{default:M(()=>[V("Tie-Dye Analogy page")]),_:1}),V(" for an explanation of how the palette is applied. ")]),t("div",Ie,[t("input",{id:"toggle-palette",type:"checkbox",onChange:N},null,32),$e]),b(Re,{modelValue:C.value,"onUpdate:modelValue":m[0]||(m[0]=P=>C.value=P)},null,8,["modelValue"]),t("details",Pe,[Ne,b(zt,{modelValue:R.value,"onUpdate:modelValue":m[1]||(m[1]=P=>R.value=P)},null,8,["modelValue"])])]),_:1}),b(Q,{title:"Export"},{default:M(()=>[k.value?(v(),w("div",Se,[b(x,{to:{path:g.value,query:{custom_pattern:k.value,custom_palette:c.value}},target:"_blank"},{default:M(()=>[V("Viewer Link")]),_:1},8,["to"])])):(v(),w("div",Oe,"Create a pattern using the other tabs, then a link will appear here"))]),_:1})]),_:1})]),_:1})],64)}}});export{Ke as default};
