var se=Object.defineProperty;var re=(o,t,a)=>t in o?se(o,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):o[t]=a;var I=(o,t,a)=>(re(o,typeof t!="symbol"?t+"":t,a),a);import{d as le,r as U,w as P,f,c as v,e,h as m,i as x,l as A,g as S,C as ie,a as p,F as L,m as F,b as y,t as Z,q as T,j as ue,n as ce,k as pe,v as me}from"./index-xFizMusB.js";import{C as b,T as de,a as _e,_ as G}from"./Sketch-D1HhKuvk.js";import{T as fe,C as he,a as q,_ as ge}from"./CoefficientPickerSketch-D-YmLfGW.js";import{R as ve,C as we,a as ye,d as ke,_ as be}from"./ReferenceGeometryEditor.vue_vue_type_script_setup_true_lang-B8tEOrp8.js";import{F as K}from"./common_glsl-CLkdFb3a.js";import{d as z,b as O,C as Y,D as Se,c as Ee,a as Re,W as Ve}from"./WallpaperSketch-oBNjIP85.js";import{t as Ce,e as Te,m as D,c as xe,d as Me}from"./math-DWFzcMo1.js";import{t as ee}from"./tuples-6lOvLNBg.js";import"./validation-Cv0neZFQ.js";const Pe={square:({n:o,m:t})=>[{n:t,m:-o},{n:-o,m:-t},{n:-t,m:o}],hexagon:({n:o,m:t})=>[{n:t,m:-(o+t)},{n:-(o+t),m:o}]};function qe(o,t){return Pe[o](t)}const ze={negate:({r:o,theta:t})=>new b(-o,t),negate_n:({r:o,theta:t},{n:a})=>{const l=Math.pow(-1,a);return new b(l*o,t)},negate_m:({r:o,theta:t},{m:a})=>{const l=Math.pow(-1,a);return new b(l*o,t)},negate_nm:({r:o,theta:t},{n:a,m:l})=>{const _=Math.pow(-1,a+l);return new b(_*o,t)},negate_m1:({r:o,theta:t},{m:a})=>{const l=Math.pow(-1,a+1);return new b(l*o,t)},negate_n1:({r:o,theta:t},{n:a})=>{const l=Math.pow(-1,a+1);return new b(l*o,t)},negate_nm1:({r:o,theta:t},{n:a,m:l})=>{const _=Math.pow(-1,a+l+1);return new b(_*o,t)}};function Ue(o,t,a){return ze[o](t,a)}const Ae={negate:({n:o,m:t})=>({n:-o,m:-t}),negate_n:({n:o,m:t})=>({n:-o,m:t}),negate_m:({n:o,m:t})=>({n:o,m:-t}),swap:({n:o,m:t})=>({n:t,m:o}),negate_swap:({n:o,m:t})=>({n:-t,m:-o}),negate_m_swap:({n:o,m:t})=>({n:-t,m:o})};function Le(o,t){return Ae[o](t)}class te{constructor(t,a){I(this,"grid_size");I(this,"group");this.grid_size=t,this.group=a}frequency_map(t){const{row:a,col:l}=Ce(t,this.grid_size);return{n:l,m:a}}inverse_frequency_map(t){const{n:a,m:l}=t;return Te({row:l,col:a},this.grid_size)}is_editable(t){const{n:a,m:l}=this.frequency_map(t);if(this.group.base_rule==="hexagon"){const _=Math.floor(this.grid_size/2);if(Math.abs(a+l)>_)return!1}switch(this.group.parity){case"odd_m":return D(l,2)===1;case"odd_n":return D(a,2)===1;case"odd_nm":return D(a+l,2)==1}return!0}update_coefficients(t,a,l){const _=xe(a,this.grid_size),R=this.frequency_map(_),k=[];if(this.group.base_rule){const r=qe(this.group.base_rule,R),u=r.length+1,c=l.scale(1/u),d=[R,...r].map(g=>[g,c]);k.push(...d)}else k.push([R,l]);const h=this.group.rules??[];for(const r of h){const u=k.map(([c,d])=>{const g=Le(r.partner,c);let V=d;return r.negate&&(V=Ue(r.negate,d,c)),[g,V]});k.push(...u)}for(const[r,u]of k){const c=this.inverse_frequency_map(r),d=Me(c,this.grid_size);t[d]=u}}}const Ne={class:"form-row"},We=["value"],$e=["value"],Ie=["value"],Ge={class:"form-row"},Oe={class:"form-row"},De=["onClick"],Fe=le({__name:"WallpaperPaletteEditor",props:{modelValue:{}},emits:["update:modelValue"],setup(o,{emit:t}){const l=U(o.modelValue),_=t;P(l,h=>{_("update:modelValue",h)},{deep:!0});function R(h){l.value.colors=l.value.colors.filter((r,u)=>u!==h)}function k(){l.value.colors.length>=12||l.value.colors.push(new we(0,0,0))}return(h,r)=>(f(),v(L,null,[e("div",Ne,[e("label",null,[m(" Palette Type "),x(e("select",{"onUpdate:modelValue":r[0]||(r[0]=u=>l.value.palette_type=u)},[e("option",{value:S(z).HorizontalStripes},"Horizontal Stripes",8,We),e("option",{value:S(z).VerticalStripes},"Vertical Stripes",8,$e),e("option",{value:S(z).Plaid},"Plaid",8,Ie)],512),[[A,l.value.palette_type]])])]),x(e("div",Ge,[e("label",null,[m(" Plaid diagonal thickness "),p(ve,{min:1,max:20,step:1,modelValue:l.value.diagonal_thickness,"onUpdate:modelValue":r[1]||(r[1]=u=>l.value.diagonal_thickness=u)},null,8,["modelValue"])])],512),[[ie,l.value.palette_type===S(z).Plaid]]),(f(!0),v(L,null,F(l.value.colors,(u,c)=>(f(),v("div",{key:c},[e("div",Oe,[p(ye,{modelValue:l.value.colors[c],"onUpdate:modelValue":d=>l.value.colors[c]=d},{default:y(()=>[m("Color "+Z(c+1)+": ",1)]),_:2},1032,["modelValue","onUpdate:modelValue"]),e("button",{onClick:d=>R(c)},"Remove Color",8,De)])]))),128)),e("div",{class:"form-row"},[e("button",{onClick:k},"Add color")])],64))}}),Ze=e("h2",null,"Wallpaper Maker",-1),Be=e("p",null,[m(" Using the dropdowns below, select a "),e("a",{href:"https://en.wikipedia.org/wiki/Wallpaper_group"},"wallpaper group"),m(" or one of the color-reversing variations listed in "),e("cite",null,"Creating Symmetry")],-1),je={class:"form-row"},He=e("label",{for:"wallpaper-category"},"Select Category: ",-1),Qe=e("option",{value:"wallpaper"},"17 Wallpaper Groups",-1),Xe=e("option",{value:"reversing"},"46 Color-reversing Wallpaper Groups",-1),Je=[Qe,Xe],Ke={class:"form-row"},Ye=e("label",{for:"group"},"Select Wallpaper Group: ",-1),et=["value"],tt=["value"],ot=e("details",null,[e("summary",null,"Math Details"),e("p",null," Wallpaper waves are the sum of plane waves traveling in different directions. Given how I implemented them in the shader, I phrase it slightly differently than the book does. The formula looks like this: "),e("math",{display:"block",class:"tml-display",style:{display:"block math"}},[e("mrow",null,[e("mi",null,"f"),e("mo",{form:"prefix",stretchy:"false"},"("),e("mi",null,"z"),e("mo",{form:"postfix",stretchy:"false"},")"),e("mo",null,"="),e("mrow",null,[e("munder",null,[e("mo",{movablelimits:"false"},"∑"),e("mrow",null,[e("mi",null,"n"),e("mo",{separator:"true"},","),e("mi",null,"m")])])]),e("msub",null,[e("mi",null,"a"),e("mrow",null,[e("mi",null,"n"),e("mo",{separator:"true"},","),e("mi",null,"m")])]),e("msup",null,[e("mi",null,"e"),e("mrow",null,[e("mn",null,"2"),e("mi",null,"π"),e("mi",null,"i"),e("mo",{form:"prefix",stretchy:"false"},"("),e("mi",null,"k"),e("mo",null,"⋅"),e("msup",null,[e("mi",null,"A"),e("mrow",null,[e("mo",{form:"prefix",stretchy:"false",lspace:"0em",rspace:"0em"},"−"),e("mn",null,"1")])]),e("mi",null,"z"),e("mo",{form:"postfix",stretchy:"false",lspace:"0em",rspace:"0em"},")")])])])]),e("p",null,[m(" Where "),e("math",null,[e("mi",null,"A")]),m(" is a matrix that changes to the basis of the lattice, "),e("math",null,[e("mi",null,"k")]),m(" is the wave vector (integer frequencies) and the dot represents a dot product (which makes the wave point in the direction of "),e("math",null,[e("mi",null,"k")]),m(" ) ")]),e("p",null," Similarly to the rosettes/friezes, the form takes the selected symmetry type and applies constraints to the coefficients to produce the desired symmetry. ")],-1),lt=e("p",null," Select a term from the grid. Then click and drag in the complex plane below to edit the term. ",-1),at={class:"form-row"},nt={class:"form-row"},st={class:"form-row"},rt={class:"form-row"},it={class:"form-row"},ut=e("summary",null,"Reference Geometry",-1),ct={key:0,class:"form-row"},pt={key:1},oe=3,bt=le({__name:"WallpaperMakerView",props:{category:{default:"wallpaper"},categoryModifiers:{},symmetry_group:{default:O.p1},symmetry_groupModifiers:{},reversing_group:{default:Y.p1_p1},reversing_groupModifiers:{},enable_palette:{type:Boolean,default:!1},enable_paletteModifiers:{},palette:{default:Se},paletteModifiers:{},ref_geom:{default:ke},ref_geomModifiers:{}},emits:["update:category","update:symmetry_group","update:reversing_group","update:enable_palette","update:palette","update:ref_geom"],setup(o){const t=2*oe+1,a=t*t,l=oe,_=l*t+l,R=new Re,k=new Ve,h=T(o,"category"),r=T(o,"symmetry_group"),u=T(o,"reversing_group"),c=ue(()=>h.value==="wallpaper"?r.value:u.value),d=T(o,"enable_palette"),g=U(new te(t,c.value)),V=T(o,"palette"),N=T(o,"ref_geom"),W=U(),B=U(),M=new Ee({pattern:{series:K.from_tuples([[1,0,1,0],[0,1,1,0]]),group:r.value},palette:V.value}),E={cell_size:40,rows:t,cols:t,selected_index:_,coefficients:new Array(a).fill(b.ZERO),frequency_map:i=>g.value.frequency_map(i),editable_map:i=>g.value.is_editable(i)},j=new fe(E),H={coefficient:_e.ZERO},$=new he(H);j.events.addEventListener("term-selected",i=>{const s=i.detail;H.coefficient=s.to_rect()});function Q(){const i=E.coefficients,s=[];for(let n=0;n<t;n++)for(let w=0;w<t;w++){const ae=n*t+w,J=i[ae];if(J.r===0)continue;const ne=g.value.frequency_map({row:n,col:w});s.push({frequencies:ne,coefficient:J})}const C={series:new K(s),group:c.value};M.pattern=C,ee(C,R).then(n=>{W.value=n}).catch(console.error)}function X(i){const s=i.detail;g.value.update_coefficients(E.coefficients,E.selected_index,s.to_polar()),Q()}return $.events.addEventListener("change",X),$.events.addEventListener("input",X),P(d,i=>{M.show_palette=i}),P(V,i=>{M.palette=i,ee(i,k).then(s=>{B.value=s}).catch(console.error)},{deep:!0}),P(c,i=>{const s=i??O.p1;g.value=new te(t,s),E.coefficients.fill(b.ZERO),E.selected_index=_,E.frequency_map=n=>g.value.frequency_map(n),E.editable_map=n=>g.value.is_editable(n),Q()}),P(N,i=>{M.ref_geom=i},{deep:!0}),(i,s)=>{const C=pe("RouterLink");return f(),ce(de,null,{left:y(()=>[p(G,{sketch:S(M),is_card:!0},null,8,["sketch"])]),right:y(()=>[Ze,p(ge,null,{default:y(()=>[p(q,{title:"Symmetry"},{default:y(()=>[Be,e("div",je,[He,x(e("select",{id:"wallpaper-category","onUpdate:modelValue":s[0]||(s[0]=n=>h.value=n)},Je,512),[[A,h.value]])]),e("div",Ke,[Ye,h.value==="wallpaper"?x((f(),v("select",{key:0,id:"group","onUpdate:modelValue":s[1]||(s[1]=n=>r.value=n)},[(f(!0),v(L,null,F(S(O),(n,w)=>(f(),v("option",{key:w,value:n},Z(w),9,et))),128))],512)),[[A,r.value]]):x((f(),v("select",{key:1,id:"group","onUpdate:modelValue":s[2]||(s[2]=n=>u.value=n)},[(f(!0),v(L,null,F(S(Y),(n,w)=>(f(),v("option",{key:w,value:n},Z(w),9,tt))),128))],512)),[[A,u.value]])]),ot]),_:1}),p(q,{title:"Pattern"},{default:y(()=>[lt,e("div",at,[p(G,{sketch:S(j),is_card:!1},null,8,["sketch"])]),e("div",nt,[p(G,{sketch:S($),is_card:!1},null,8,["sketch"])])]),_:1}),p(q,{title:"Palette"},{default:y(()=>[e("p",null,[m(' Select a palette type and edit the colors to customize your design. The "Show color palette" button shows what the color palette looks like for reference. See the '),p(C,{to:"/point_symmetry/tie_dye_analogy"},{default:y(()=>[m("Tie-Dye Analogy page")]),_:1}),m(" for an explanation of how the palette is applied. ")]),e("div",st,[e("label",null,[x(e("input",{id:"toggle-palette",type:"checkbox","onUpdate:modelValue":s[3]||(s[3]=n=>d.value=n)},null,512),[[me,d.value]]),m(" Show color palette ")])]),e("div",rt,[p(Fe,{modelValue:V.value,"onUpdate:modelValue":s[4]||(s[4]=n=>V.value=n)},null,8,["modelValue"])]),e("details",it,[ut,p(be,{modelValue:N.value,"onUpdate:modelValue":s[5]||(s[5]=n=>N.value=n)},null,8,["modelValue"])])]),_:1}),p(q,{title:"Export"},{default:y(()=>[W.value?(f(),v("div",ct,[p(C,{to:{path:"/wallpaper_symmetry",query:{custom_pattern:W.value,custom_palette:B.value}},target:"_blank"},{default:y(()=>[m("Viewer Link")]),_:1},8,["to"])])):(f(),v("div",pt,"Create a pattern using the other tabs, then a link will appear here"))]),_:1})]),_:1})]),_:1})}}});export{bt as default};
