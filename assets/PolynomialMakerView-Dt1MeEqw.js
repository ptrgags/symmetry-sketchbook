var Rt=Object.defineProperty;var Vt=(e,o,r)=>o in e?Rt(e,o,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[o]=r;var X=(e,o,r)=>(Vt(e,typeof o!="symbol"?o+"":o,r),r);import{C as q,T as zt,a as dt,_ as et}from"./Sketch-v-RCqe1c.js";import{t as bt,a as ot,R as Ct,d as Tt,_ as Et}from"./ReferenceGeometryEditor.vue_vue_type_script_setup_true_lang-DFkX-q_s.js";import{T as It,C as $t,_ as Pt,a as H}from"./CoefficientPickerSketch-DU_xMngp.js";import{F as mt}from"./common_glsl-CF-Ah18z.js";import{m as ut,i as Nt,f as St,a as Ot,b as Ut,t as J,c as Ft,d as At}from"./math-DWFzcMo1.js";import{c as qt,b as Lt,d as Dt,P as Zt,a as jt}from"./SerializedPolynomialPalette-DsoHhqKH.js";import{d as W,p as L,q as $,r as O,w as D,f as y,c as w,e as t,t as Z,g as V,h as M,i as A,z as wt,A as F,_ as Bt,j as it,l as st,F as j,m as lt,n as rt,a as v,b as x,o as Gt,k as Yt}from"./index-tZqL7VPW.js";import{t as ft}from"./tuples-6lOvLNBg.js";import"./PolynomialShader-DRdb8B3X.js";import"./validation-Cv0neZFQ.js";function Kt(e){const{diff:o,sum:r}=e,n=(o+r)/2,s=(r-o)/2;return{n,m:s}}function Qt(e,o){const r=ut(e,2);return r==0?2*o:r==1&&o==0?0:2*Math.sign(o)*Math.max(Math.abs(o)-.5,0)}const Xt={identity:Nt,flip_col:St,flip_row:Ot,flip_both:Ut};function Ht(e,o,r){return Xt[e](o,r)}const Jt={rotation_folds:1,input_rotation:!1,input_reflection:!1,input_inversion:!1,output_rotations:0,output_reflection:!1};function B(e){const o=e.input_reflection!==e.output_reflection,r=e.input_inversion;return r&&o?"flip_row":r?"flip_both":o?"flip_col":"identity"}function Wt(e){return Number(e.input_inversion)+Number(e.input_reflection)}function kt(e,o){const r=Math.pow(-1,Wt(e)),n=Number(e.input_rotation),s=Math.pow(-1,Number(e.output_reflection)),a=e.output_rotations;return r*n*o-s*a}function at(e,o){const r=e.input_rotation,n=e.input_reflection||e.input_inversion||e.output_reflection;if(!r||n)return o;const s=e.rotation_folds,a=e.output_rotations;return s*o+a}function pt(e,o){const{row:r,col:n}=e,s=at(o,n),a=Qt(s,r);return{diff:s,sum:a}}function te(e,o,r){if(B(e)!=="identity")throw new Error("rule is not a self-partner constraint!");const n=e.rotation_folds,s=kt(e,o);if(e.output_reflection){const u=q.root_of_unity(n,s),l=r.to_rect(),d=u.to_rect(),h=l.dot(d);return u.scale(h)}const a=ut(s,n);return(e.input_rotation||e.output_rotations>0)&&a!==0?(console.warn("Term invalid for rotation constraint. Setting to 0"),q.ZERO):r}function ee(e,o,r){if(B(e)==="identity")throw new Error("Trying to compute partner coefficient for a self-partner rule");const n=e.output_reflection?r.conj:r,s=kt(e,o),a=q.root_of_unity(e.rotation_folds,s);return n.mult(a)}function oe(e){if(e.length===0)throw new Error("There must be at least one rule");const o=new Set;for(const r of e){const n=B(r);if(o.has(n))throw new Error(`Can't have multiple rules with the same pairing: ${n}`)}}class yt{constructor(o,r){X(this,"grid_size");X(this,"self_rule");X(this,"partner_rules",[]);this.grid_size=o,oe(r);for(const n of r)B(n)==="identity"?this.self_rule=n:this.partner_rules.push(n)}get first_rule(){return this.self_rule??this.partner_rules[0]}is_editable(o){const r=J(o,this.grid_size),{diff:n,sum:s}=pt(r,this.first_rule);return!(ut(n,2)===1&&s==0)}frequency_map(o){const r=J(o,this.grid_size),n=pt(r,this.first_rule);return Kt(n)}update_coefficients(o,r,n){const s=Ft(r,this.grid_size),a=J(s,this.grid_size);let u=n;if(this.self_rule){const d=at(this.self_rule,a.col);u=te(this.self_rule,d,n)}const l=[[s,u]];for(const d of this.partner_rules){const h=B(d),p=l.map(([R,z])=>{const k=Ht(h,R,this.grid_size),_=J(k,this.grid_size),g=at(d,_.col),b=ee(d,g,z);return[k,b]});l.push(...p)}for(const[d,h]of l){const p=At(d,this.grid_size);o[p]=h}}}var f=(e=>(e[e.Identity=0]="Identity",e[e.Rotation=1]="Rotation",e[e.Mirror=2]="Mirror",e[e.ComplexInversion=3]="ComplexInversion",e[e.CircleInversion=4]="CircleInversion",e[e.RotoInversion=5]="RotoInversion",e))(f||{});function re(e){switch(e){case 0:return"Identity";case 1:return"Rotation";case 2:return"Mirror";case 3:return"Complex-inversion";case 4:return"Circle Inversion";case 5:return"Roto-inversion";default:return""}}function ne(e){switch(e){case 1:case 5:return!0}return!1}function ie(e){switch(e){case 2:case 4:case 5:return!0}return!1}function se(e){switch(e){case 3:case 4:case 5:return!0}return!1}const le={class:"constraint"},ae={class:"form-row"},ue={class:"form-row"},ce=["max"],_e={key:0,class:"form-row"},de=W({__name:"ColorTurnEditor",props:L({constraint:{},rotationFolds:{default:0},modelValue:{}},{rotations:{default:0},rotationsModifiers:{}}),emits:L(["update:modelValue"],["update:rotations"]),setup(e,{emit:o}){const r=e,n=o,s=$(e,"rotations"),a=O(!1),u=bt(a);return D([s,a],(l,d)=>{const[h,p]=l,[R,z]=d;h===R&&p===z||n("update:modelValue",{output_rotations:h,output_reflection:p})}),(l,d)=>(y(),w("div",le,[t("div",ae,"Input symmetry: "+Z(V(re)(l.constraint.input_symmetry)),1),t("div",ue,[t("label",null,[M(" Output Turns: "),A(t("input",{id:"third-output-rotation",type:"number",min:"0",max:r.rotationFolds-1,step:"1","onUpdate:modelValue":d[0]||(d[0]=h=>s.value=h)},null,8,ce),[[wt,s.value,void 0,{number:!0}]])])]),l.constraint.output_reflection_editable?(y(),w("div",_e,[t("label",null,[M("Output Reflection?: "),t("input",{id:"third-output-reflection",type:"checkbox",onChange:d[1]||(d[1]=(...h)=>V(u)&&V(u)(...h))},null,32)])])):F("",!0)]))}}),nt=Bt(de,[["__scopeId","data-v-6f1218cf"]]),ht=[{id:"identity",label:{rosette:"No Symmetry",frieze:"No Symmetry"},first_constraint:{input_symmetry:f.Identity,output_reflection_editable:!0}},{id:"mirror_x",label:{rosette:"Mirror",frieze:"Mirrors (horizontal)"},first_constraint:{input_symmetry:f.Mirror,output_reflection_editable:!0}},{id:"inversion",label:{rosette:"Circle inversion",frieze:"Mirror (vertical)"},first_constraint:{input_symmetry:f.CircleInversion,output_reflection_editable:!0}},{id:"reciprocal",label:{rosette:"Complex inversion",frieze:"Rotations"},first_constraint:{input_symmetry:f.ComplexInversion,output_reflection_editable:!0}},{id:"mirror_inversion",label:{rosette:"Mirror + Complex inversion",frieze:"Mirror (horizontal) + rotations"},first_constraint:{input_symmetry:f.Mirror,output_reflection_editable:!0},second_constraint:{input_symmetry:f.ComplexInversion,output_reflection_editable:!0}}],vt=[{id:"p1",label:{rosette:"Rotation",frieze:"Translations"},first_constraint:{input_symmetry:f.Rotation,output_reflection_editable:!0}},{id:"p11g",label:{rosette:"Roto-inversion",frieze:"Glide Reflections"},first_constraint:{input_symmetry:f.RotoInversion,output_reflection_editable:!0}},{id:"p1m1",label:{rosette:"Rotation + Mirror",frieze:"Translations + Mirrors (horizontal)"},first_constraint:{input_symmetry:f.Rotation,output_reflection_editable:!0},second_constraint:{input_symmetry:f.Mirror,output_reflection_editable:!1}},{id:"p11m",label:{rosette:"Rotation + Circle inversion",frieze:"Translations + Mirror (vertical)"},first_constraint:{input_symmetry:f.Rotation,output_reflection_editable:!0},second_constraint:{input_symmetry:f.CircleInversion,output_reflection_editable:!0}},{id:"p2",label:{rosette:"Rotation + Complex inversion",frieze:"Translations + Rotations"},first_constraint:{input_symmetry:f.Rotation,output_reflection_editable:!0},second_constraint:{input_symmetry:f.ComplexInversion,output_reflection_editable:!0}},{id:"p2mg",label:{rosette:"Roto-inversion + Mirror",frieze:"Glide Reflections + Mirrors (horizontal)"},first_constraint:{input_symmetry:f.RotoInversion,output_reflection_editable:!0},second_constraint:{input_symmetry:f.Mirror,output_reflection_editable:!0}},{id:"p2mm",label:{rosette:"Rotation + Complex Inversion + Mirror",frieze:"Translations + Mirrors"},first_constraint:{input_symmetry:f.Rotation,output_reflection_editable:!0},second_constraint:{input_symmetry:f.ComplexInversion,output_reflection_editable:!0},third_constraint:{input_symmetry:f.Mirror,output_reflection_editable:!1}}],me={class:"form-row"},fe=t("label",{for:"rotation-folds"},"Rotation folds (1 = no rotation) ",-1),pe={class:"form-row"},ye=t("label",{for:"symmetry-group"},"Symmetry Type: ",-1),he=["value"],ve=["value"],ge={key:0,class:"form-row"},be=t("label",{for:"color-turning-enabled"},"Color Turning Symmetry? ",-1),we=W({__name:"PolynomialSymmetryEditor",props:L({symmetryMode:{},value:{}},{rotation_folds:{default:1},rotation_foldsModifiers:{},no_rotation_group:{default:ht[0]},no_rotation_groupModifiers:{},rotation_group:{default:vt[0]},rotation_groupModifiers:{},first_color_turn:{},first_color_turnModifiers:{},second_color_turn:{},second_color_turnModifiers:{},third_color_turn:{},third_color_turnModifiers:{}}),emits:L(["update:modelValue"],["update:rotation_folds","update:no_rotation_group","update:rotation_group","update:first_color_turn","update:second_color_turn","update:third_color_turn"]),setup(e,{emit:o}){const r=$(e,"rotation_folds"),n=$(e,"no_rotation_group"),s=$(e,"rotation_group"),a=it(()=>r.value===1?n.value:s.value),u=O(!1),l=bt(u),d=$(e,"first_color_turn"),h=$(e,"second_color_turn"),p=$(e,"third_color_turn"),R=o;function z(k,_,g,b){const i=_.input_symmetry,P=ne(i),E=ie(i),C=se(i);return{rotation_folds:k,input_rotation:P,input_reflection:E,input_inversion:C,output_rotations:g,output_reflection:b}}return D([r,a,u,d,h,p],k=>{const[_,g,b,i,P,E]=k;if(!g)return;const C={output_rotations:0,output_reflection:!1},G=g.first_constraint,N=b&&i?i:C,U=[z(_,G,N.output_rotations,N.output_reflection)];if(g.second_constraint){const S=g.second_constraint,I=b&&P?P:C,c=S.output_reflection_editable?I.output_reflection:N.output_reflection,m=z(_,S,I.output_rotations,c);U.push(m)}if(g.third_constraint){const S=g.third_constraint,I=b&&E?E:C,c=S.output_reflection_editable?I.output_reflection:N.output_reflection,m=z(_,S,I.output_rotations,c);U.push(m)}R("update:modelValue",U)}),(k,_)=>{var g,b;return y(),w("div",null,[t("div",me,[fe,A(t("input",{id:"rotation-folds",type:"number",min:"1",max:"12",step:"1","onUpdate:modelValue":_[0]||(_[0]=i=>r.value=i)},null,512),[[wt,r.value,void 0,{number:!0}]])]),t("div",pe,[ye,r.value===1?A((y(),w("select",{key:0,id:"symmetry-group","onUpdate:modelValue":_[1]||(_[1]=i=>n.value=i)},[(y(!0),w(j,null,lt(V(ht),i=>(y(),w("option",{key:i.id,value:i},Z(i.label[k.$props.symmetryMode]),9,he))),128))],512)),[[st,n.value]]):A((y(),w("select",{key:1,id:"symmetry-group","onUpdate:modelValue":_[2]||(_[2]=i=>s.value=i)},[(y(!0),w(j,null,lt(V(vt),i=>(y(),w("option",{key:i.id,value:i},Z(i.label[k.$props.symmetryMode]),9,ve))),128))],512)),[[st,s.value]])]),a.value?(y(),w("div",ge,[be,t("input",{id:"color-turning-enabled",type:"checkbox",onChange:_[3]||(_[3]=(...i)=>V(l)&&V(l)(...i))},null,32)])):F("",!0),u.value&&a.value?(y(),rt(nt,{key:1,constraint:a.value.first_constraint,"rotation-folds":r.value,modelValue:d.value,"onUpdate:modelValue":_[4]||(_[4]=i=>d.value=i)},null,8,["constraint","rotation-folds","modelValue"])):F("",!0),u.value&&((g=a.value)!=null&&g.second_constraint)?(y(),rt(nt,{key:2,constraint:a.value.second_constraint,"rotation-folds":r.value,modelValue:h.value,"onUpdate:modelValue":_[5]||(_[5]=i=>h.value=i)},null,8,["constraint","rotation-folds","modelValue"])):F("",!0),u.value&&((b=a.value)!=null&&b.third_constraint)?(y(),rt(nt,{key:3,constraint:a.value.third_constraint,"rotation-folds":r.value,modelValue:p.value,"onUpdate:modelValue":_[6]||(_[6]=i=>p.value=i)},null,8,["constraint","rotation-folds","modelValue"])):F("",!0)])}}}),ke={class:"form-row"},xe=t("label",{for:"palette-type"},"Palette Type: ",-1),Me=["value"],Re={class:"form-row"},Ve={class:"form-row"},ze={class:"form-row"},Ce={class:"form-row"},Te=W({__name:"PolynomialPaletteEditor",props:{modelValue:{}},emits:["update:modelValue"],setup(e,{emit:o}){const n=O(e.modelValue),s=o;return D(n,a=>s("update:modelValue",a),{deep:!0}),(a,u)=>(y(),w(j,null,[t("div",ke,[xe,A(t("select",{id:"palette-type","onUpdate:modelValue":u[0]||(u[0]=l=>n.value.palette_type=l)},[(y(!0),w(j,null,lt(V(qt),l=>(y(),w("option",{key:l.id,value:l},Z(l.label),9,Me))),128))],512),[[st,n.value.palette_type]])]),t("div",Re,[v(ot,{id:"primary-color",modelValue:n.value.primary_color,"onUpdate:modelValue":u[1]||(u[1]=l=>n.value.primary_color=l)},{default:x(()=>[M("Primary Color")]),_:1},8,["modelValue"])]),t("div",Ve,[v(ot,{id:"secondary-color",modelValue:n.value.secondary_color,"onUpdate:modelValue":u[2]||(u[2]=l=>n.value.secondary_color=l)},{default:x(()=>[M("Secondary Color")]),_:1},8,["modelValue"])]),t("div",ze,[v(ot,{id:"far-color",modelValue:n.value.far_color,"onUpdate:modelValue":u[3]||(u[3]=l=>n.value.far_color=l)},{default:x(()=>[M("Far Away Color")]),_:1},8,["modelValue"])]),t("div",Ce,[v(Ct,{id:"far-power",min:1,max:19,modelValue:n.value.far_power,"onUpdate:modelValue":u[4]||(u[4]=l=>n.value.far_power=l)},{default:x(()=>[M("Far Away Fade")]),_:1},8,["modelValue"])])],64))}}),Ee=t("details",{class:"form-row"},[t("summary",null,"Math Details"),t("p",null,[M(" As described in the first half of "),t("cite",null,"Creating Symmetry"),M(" by Frank Farris, rosettes and friezes can be made using complex polynomials of the form: ")]),t("math",{display:"block",class:"tml-display",style:{display:"block math"}},[t("mtable",{displaystyle:"true",columnalign:"right left"},[t("mtr",null,[t("mtd",{class:"tml-right",style:{padding:"0.7ex 0em 0.7ex 0em"}},[t("mrow",null,[t("msub",null,[t("mi",null,"f"),t("mrow",null,[t("mi",null,"r"),t("mi",null,"o"),t("mi",null,"s"),t("mi",null,"e"),t("mi",null,"t"),t("mi",null,"t"),t("mi",null,"e")])]),t("mo",{form:"prefix",stretchy:"false"},"("),t("mi",null,"z"),t("mo",{form:"postfix",stretchy:"false"},")")])]),t("mtd",{class:"tml-left",style:{padding:"0.7ex 0em 0.7ex 0em"}},[t("mrow",null,[t("mo",null,"="),t("mrow",null,[t("munder",null,[t("mo",{movablelimits:"false"},"∑"),t("mrow",null,[t("mi",null,"n"),t("mo",{separator:"true"},","),t("mi",null,"m")])])]),t("msub",null,[t("mi",null,"a"),t("mrow",null,[t("mi",null,"n"),t("mo",{separator:"true"},","),t("mi",null,"m")])]),t("msup",null,[t("mi",null,"z"),t("mi",null,"n")]),t("msup",null,[t("mover",null,[t("mi",null,"z"),t("mo",{stretchy:"false",class:"tml-xshift",style:{"math-style":"normal","math-depth":"0"}},"‾")]),t("mi",null,"m")])])])]),t("mtr",null,[t("mtd",{class:"tml-right",style:{padding:"0.7ex 0em 0.7ex 0em"}},[t("mrow",null,[t("msub",null,[t("mi",null,"f"),t("mrow",null,[t("mi",null,"f"),t("mi",null,"r"),t("mi",null,"i"),t("mi",null,"e"),t("mi",null,"z"),t("mi",null,"e")])]),t("mo",{form:"prefix",stretchy:"false"},"("),t("mi",null,"z"),t("mo",{form:"postfix",stretchy:"false"},")")])]),t("mtd",{class:"tml-left",style:{padding:"0.7ex 0em 0.7ex 0em"}},[t("mrow",null,[t("mo",null,"="),t("msub",null,[t("mi",null,"f"),t("mrow",null,[t("mi",null,"r"),t("mi",null,"o"),t("mi",null,"s"),t("mi",null,"e"),t("mi",null,"t"),t("mi",null,"t"),t("mi",null,"e")])]),t("mo",{form:"prefix",stretchy:"false"},"("),t("msup",null,[t("mi",null,"e"),t("mrow",null,[t("mi",null,"i"),t("mi",null,"z")])]),t("mo",{form:"postfix",stretchy:"false"},")")])])])])]),t("p",null," By careful choice of the coefficients, symmetries of these equations turn into symmetries of the complex function. "),t("p",null," This form does quite a bit of math behind the scenes to take the symmetry description, and produce constraints for the grid of terms to help enforce the symmetry. The basics are described in chapters 7-8 of the book, but I had to derive the generalization of the patterns myself. ")],-1),Ie=t("details",{class:"form-row"},[t("summary",null,"Known Issues"),t("p",null," This page is the most experimental one of the entire website. It mostly works, but checking the rest is rather tedious. I may return to it someday, but I don't want to hold up showing off the rest of this project that is working. "),t("ul",null,[t("li",null," Roto-inversions/glide reflections seem to be buggy, I haven't gotten around to debugging it. "),t("li",null," The symmetry options aren't restrictive enough and allow some invalid symmetry rules. For example, for roto-inversions the number of rotations must be even, else the pattern won't line up with itself after a full circle. "),t("li",null," For the color turning/reversing symmetry options, I realized too late that the recipes are a lot more restrictive than I thought. Since mirrors/inversions are involutions (repeating it twice cancels it out), the only valid color turn for those cases is a half turn. ")]),t("p",null," If I ever update this in the future, the main thing would be to redo this form. If I figure out an exhaustive list of cases, then a dropdown like in the wallpaper maker page would make this a lot simpler for everyone. ")],-1),$e=t("p",null," Select a term from the grid. Then click and drag in the complex plane below to edit the term. ",-1),Pe={class:"form-row"},Ne={class:"form-row"},Se={class:"form-row"},Oe=t("label",{for:"toggle-palette"}," Show color palette",-1),Ue={class:"form-row"},Fe=t("summary",null,"Reference Geometry",-1),Ae={key:0,class:"form-row"},qe={key:1},gt=3,Je=W({__name:"PolynomialMakerView",props:L({symmetryMode:{}},{ref_geom:{default:Tt},ref_geomModifiers:{}}),emits:["update:ref_geom"],setup(e){const o=2*gt+1,r=o*o,n=gt,s=(n-1)*o+n,a=new Zt,u=new jt,l=e,d=it(()=>l.symmetryMode==="frieze"?"Frieze Maker":"Rosette Maker"),h=it(()=>l.symmetryMode==="frieze"?"/frieze_symmetry":"/point_symmetry"),p=O(new yt(o,[Jt])),R=O(Dt()),z={series:mt.from_tuples([[1,0,1,0]]),rotation_order:4},k=$(e,"ref_geom"),_=O(),g=O(),b=new Lt({symmetry_mode:l.symmetryMode,pattern:z,palette:R.value,ref_geom:k.value}),i={cell_size:40,rows:o,cols:o,selected_index:s,coefficients:new Array(r).fill(q.ZERO),frequency_map:c=>p.value.frequency_map(c),editable_map:c=>p.value.is_editable(c)},P=new It(i),E={coefficient:dt.ZERO},C=new $t(E);P.events.addEventListener("term-selected",c=>{const m=c.detail;E.coefficient=m.to_rect()});function G(c){ft(c,a).then(m=>{_.value=m}).catch(console.error)}function N(){const c=i.coefficients,m=[];for(let K=0;K<o;K++)for(let Q=0;Q<o;Q++){const xt=K*o+Q,_t=c[xt];if(_t.r===0)continue;const Mt=p.value.frequency_map({row:K,col:Q});m.push({frequencies:Mt,coefficient:_t})}const T=p.value.first_rule.rotation_folds??1,ct={rotation_order:T>=2?T:4,series:new mt(m)};b.pattern=ct,G(ct)}function tt(c){const m=c.detail;p.value.update_coefficients(i.coefficients,i.selected_index,m.to_polar()),N()}C.events.addEventListener("change",tt),C.events.addEventListener("input",tt);function U(c){const m=c.target;b.show_palette=m.checked}function S(c){p.value=new yt(o,c),i.coefficients.fill(q.ZERO),i.selected_index=s,i.frequency_map=T=>p.value.frequency_map(T),i.editable_map=T=>p.value.is_editable(T),E.coefficient=dt.ZERO,N()}function I(c){ft(c,u).then(m=>{g.value=m}).catch(console.error)}return D(R,c=>{b.palette=c,I(c)},{deep:!0}),D(k,c=>{b.ref_geom=c},{deep:!0}),Gt(()=>{G(z),I(R.value)}),(c,m)=>{const T=Yt("RouterLink");return y(),w(j,null,[t("h2",null,Z(d.value),1),v(zt,null,{left:x(()=>[v(et,{sketch:V(b),is_card:!0},null,8,["sketch"])]),right:x(()=>[v(Pt,null,{default:x(()=>[v(H,{title:"Symmetry"},{default:x(()=>[v(we,{"symmetry-mode":l.symmetryMode,"onUpdate:modelValue":S},null,8,["symmetry-mode"]),Ee,Ie]),_:1}),v(H,{title:"Pattern"},{default:x(()=>[$e,t("div",Pe,[v(et,{sketch:V(P),is_card:!1},null,8,["sketch"])]),t("div",Ne,[v(et,{sketch:V(C),is_card:!1},null,8,["sketch"])])]),_:1}),v(H,{title:"Palette"},{default:x(()=>[t("p",null,[M(' Select a palette type and edit the colors to customize your design. The "Show color palette" button shows what the color palette looks like for reference. See the '),v(T,{to:"/point_symmetry/tie_dye_analogy"},{default:x(()=>[M("Tie-Dye Analogy page")]),_:1}),M(" for an explanation of how the palette is applied. ")]),t("div",Se,[t("input",{id:"toggle-palette",type:"checkbox",onChange:U},null,32),Oe]),v(Te,{modelValue:R.value,"onUpdate:modelValue":m[0]||(m[0]=Y=>R.value=Y)},null,8,["modelValue"]),t("details",Ue,[Fe,v(Et,{modelValue:k.value,"onUpdate:modelValue":m[1]||(m[1]=Y=>k.value=Y)},null,8,["modelValue"])])]),_:1}),v(H,{title:"Export"},{default:x(()=>[_.value?(y(),w("div",Ae,[v(T,{to:{path:h.value,query:{custom_pattern:_.value,custom_palette:g.value}},target:"_blank"},{default:x(()=>[M("Viewer Link")]),_:1},8,["to"])])):(y(),w("div",qe,"Create a pattern using the other tabs, then a link will appear here"))]),_:1})]),_:1})]),_:1})],64)}}});export{Je as default};
